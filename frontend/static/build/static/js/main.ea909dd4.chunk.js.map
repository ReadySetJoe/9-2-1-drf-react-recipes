{"version":3,"sources":["Login.js","Create.js","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","Login","props","handleLoginSubmit","e","preventDefault","user","username","state","password","post","then","res","console","log","data","localStorage","setItem","JSON","stringify","setState","loggedIn","showLogin","catch","error","handleSignUp","bind","handleChange","handleShowLogin","handleHideLogin","getItem","this","target","name","value","modal","className","onSubmit","method","onClick","title","htmlFor","onChange","type","placeholder","required","style","backgroundColor","href","React","Component","Create","image","created_by","private","prep_time","cook_time","cook_temp","cook_temp_unit","notes","preview","showCreate","handleSubmit","handleShowCreate","handleHideCreate","handleImageChange","formData","FormData","append","headers","checked","file","files","reader","FileReader","onloadend","result","readAsDataURL","create","src","alt","width","pattern","min","max","step","App","recipes","handleDelete","get","recipe","delete","id","ndx","indexOf","splice","map","key","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea909dd4.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport './Login.css';\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      loggedIn: false,\n      showLogin: false,\n    };\n\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleShowLogin = this.handleShowLogin.bind(this);\n    this.handleHideLogin = this.handleHideLogin.bind(this);\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('my-app-user')) {\n      this.setState({loggedIn: true})\n    }\n  }\n\n  handleLoginSubmit = (e) => {\n    e.preventDefault();\n\n    let user = {\n      username: this.state.username,\n      password: this.state.password,\n    }\n\n    axios.post('api/v1/rest-auth/login/', user)\n    .then(res => {\n      console.log(res.data);\n      localStorage.setItem('my-app-user', JSON.stringify(res.data));\n      this.setState({loggedIn: true, showLogin: false})\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }\n\n  handleSignUp = (e) => {\n\n    e.preventDefault();\n\n    axios.post('api/v1/rest-auth/registration/')\n    .then(res => {\n      console.log(res);\n    })\n    .catch(error => {\n      console.log(error)\n    })    \n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleShowLogin(e) {\n    if (this.state.loggedIn) {\n      axios.post('api/v1/rest-auth/logout/')\n      .then(res => {\n        localStorage.setItem('my-app-user',null);\n        this.setState({loggedIn: false, showLogin: false})\n      })\n      .catch(error => {\n        console.log(error)\n      })\n    } else {\n      this.setState({showLogin: true})\n    }\n  }\n\n  handleHideLogin(e) {\n    this.setState({showLogin: false})\n  }\n\n  render () {\n    let modal = null;\n    if (this.state.showLogin) {\n      modal = \n        <div className={this.state.showLogin ? \"modal-selected\" : \"modal\"}>\n          <form className=\"modal-content animate\" onSubmit={this.handleLoginSubmit} method=\"post\">\n            <div className=\"imgcontainer\">\n              <span onClick={this.handleHideLogin} className=\"close\" title=\"Close Modal\">&times;</span>\n            </div>\n\n            <div className=\"container\">\n              <label htmlFor=\"username\"><b>Username</b></label>\n              <input onChange={this.handleChange} type=\"text\" placeholder=\"Enter Username\" name=\"username\" required/>\n\n              <label htmlFor=\"password\"><b>Password</b></label>\n              <input onChange={this.handleChange} type=\"password\" placeholder=\"Enter Password\" name=\"password\" required/>\n\n              <button type=\"submit\">Login</button>\n              <button type=\"button\" onClick={() => (this.handleSignUp)}>Sign Up</button>\n              \n              <label>\n                <input onChange={this.handleChange} type=\"checkbox\" name=\"remember\"/> Remember me\n              </label>\n            </div>\n\n            <div className=\"container\" style={{backgroundColor:'#f1f1f1'}}>\n              <button type=\"button\" onClick={this.handleHideLogin} className=\"cancelbtn\">Cancel</button>\n              <span className=\"psw\">Forgot <a href=\"/accounts/password_reset\">password?</a></span>\n            </div>\n          </form>\n        </div>\n    }    \n    return (\n      <>\n      <button onClick={this.handleShowLogin} className=\"logon-btn\">{this.state.loggedIn ? \"Logout\" : \"Login\"}</button>\n      {modal}\n      </>\n    )\n  }\n}\n\nexport default Login","import React from 'react';\nimport axios from 'axios';\nimport './Create.css';\n\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass Create extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'test1',\n      image: null,\n      created_by: null,\n      private: 'off',\n      type: 'Anytime',\n      prep_time: '00:00',\n      cook_time: '00:00',\n      cook_temp: 10,\n      cook_temp_unit: 'Fahrenheit',\n      notes: 'this is notes',\n\n      preview: '',\n      showCreate: false,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleShowCreate = this.handleShowCreate.bind(this);\n    this.handleHideCreate = this.handleHideCreate.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let formData = new FormData();\n    formData.append('title', this.state.title);\n    formData.append('image', this.state.image);\n    formData.append('created_by', null);\n    formData.append('private', this.state.private === 'on' ? true : false);\n    formData.append('type', this.state.type);\n    formData.append('prep_time', this.state.prep_time);\n    formData.append('cook_time', this.state.cook_time);\n    formData.append('cook_temp', this.state.cook_temp);\n    formData.append('cook_temp_unit', this.state.cook_temp_unit);\n    formData.append('notes', this.state.notes);\n    console.log(formData)\n\n    axios.post('/api/v1/recipes/', formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    })\n    .then(() => {\n      this.setState({\n        title: '',\n        image: null,\n        private: false,\n        type: 'Anytime',\n        prep_time: '00:00',\n        cook_time: '00:00',\n        cook_temp: 0,\n        cook_temp_unit: 'Fahrenheit',\n        notes: '',\n  \n        preview: '',\n        showCreate: false,\n      })\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }\n\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleCheckBoxChange(e) {\n    if (e.target.checked === 'on') {\n      this.setState({[e.target.name]: true})\n    } else {\n      this.setState({[e.target.name]: false})\n    }\n    \n  }\n\n  handleImageChange(e) {\n    let file = e.target.files[0];\n    console.log(file)\n    this.setState({image: file});\n    \n    let reader = new FileReader();\n    reader.onloadend = () => {\n      this.setState({preview: reader.result})\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  handleShowCreate(e) {\n    this.setState({showCreate: true})\n  }\n\n  handleHideCreate(e) {\n    this.setState({showCreate: false})\n  }\n\n  render () {\n    let create = null;\n    if (this.state.showCreate) {\n      create = \n        <div className={this.state.showCreate ? \"create-selected\" : \"create\"}>\n          <form  className=\"create-content animate\" onSubmit={() => (this.handleSubmit)}>\n            <div className=\"imgcontainer\">\n              <span onClick={this.handleHideCreate} className=\"close\" title=\"Close Create\">&times;</span>\n            </div>\n\n            <div className=\"container\">\n              Basic Info:\n              <br/><br/>\n              Title: <input type='text' name='title' value={this.state.title} onChange={this.handleChange}/><br/><br/>\n              Image: <input type='file' name='image' onChange={this.handleImageChange}/>\n              {this.state.image ? (\n                <img src={this.state.preview} alt='preview' width=\"200\"/>\n              ) : (\n                null\n              )}\n              <br/>\n              Make Recipe Private: <input type=\"checkbox\" name='private'/>\n              <br/>\n              Recipe Type:<select name='type'>\n                <option value='Anytime'>Anytime</option>\n                <option value='Breakfast'>Breakfast</option>\n                <option value='Lunch'>Lunch</option>\n                <option value='Dinner'>Dinner</option>\n              </select>\n              <br/>\n              Prep Time: <input type=\"text\" name=\"prep_time\" pattern=\"[0-9]{2}:[0-9]{2}\" placeholder='00:00'></input>\n              Cook Time: <input type=\"text\" name=\"cook_time\" pattern=\"[0-9]{2}:[0-9]{2}\" placeholder='00:00'></input>\n              Cooking Temp: <input type=\"number\" name=\"cook_temp\" min=\"0\" max=\"999\" step=\"5\"/>\n              <select name='cook_temp_unit'>\n                <option value='Fahrenheit'>F</option>\n                <option value='Celsius'>C</option>\n              </select>\n              <br/>\n              Notes: <input type='text' name='notes' value={this.state.notes} onChange={this.handleChange}/>\n              <br/><br/>\n              <button type=\"submit\">Finish!</button>\n            </div>\n            \n            \n          </form>\n        </div>\n    }    \n    return (\n      <>\n      <button onClick={this.handleShowCreate} className=\"create-btn\">+</button>\n      {create}\n      </>\n    )\n  }\n}\n\nexport default Create","import React from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Login from './Login';\nimport Create from './Create';\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipes: [],\n      // username: '',\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('/api/v1/recipes/')\n    .then(res => {\n      this.setState({recipes:res.data});\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }\n\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleDelete(recipe) {\n    axios.delete(`/api/v1/recipes/${recipe.id}/`)\n    .then(res => {\n      console.log(res)\n      let recipes = [...this.state.recipes]\n      let ndx = recipes.indexOf(recipe)\n      recipes = recipes.splice(ndx,1) \n      this.setState({recipes})\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }\n\n\n  render() {\n    let recipes = this.state.recipes.map(recipe => (\n      <li key={recipe.id} className='recipe-li'>\n        <p>{recipe.title}</p> by <p>{recipe.created_by}</p><br/>\n        <img src={recipe.image} alt={recipe.title} width=\"200\" className='recipe-img'/>\n        <button onClick={() => this.handleDelete(recipe)} className='del-btn'>x</button>\n      </li>\n    ));\n\n    return (\n      <React.Fragment>\n\n          <header className='d-flex justify-content-between align-items-center border-bottom'>\n            <i>The kitchen is yours, {`chef`}!</i>\n            <a href=\"/\"><h1 className='text-uppercase'>Batch Maker</h1></a>\n              <div className='user-actions'>\n                <li><Create/></li>\n                <li><Login/></li>\n              </div>\n          </header>\n\n        <div className='container'>\n          <div className='row'>\n\n            <nav className='d-none d-md-flex col-3 flex-column border-right'>\n              <div>My Recipes</div>\n              <div>Public Recipes</div>\n              {/* <div>Popular Recipes</div> */}\n              <div>My Favorite Recipes</div>\n              {/* <div>My Pantry</div> */}\n            </nav>\n\n            <div className='col-9'>\n              <div>My Recipes\n                <ul>\n                  {recipes}\n                </ul>\n              </div>\n              <div>Public Recipes</div>\n              {/* <div>Popular Recipes</div> */}\n              <div>My Favorite Recipes</div>\n              {/* <div>My Pantry</div> */}\n\n            </div>\n          </div>\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}